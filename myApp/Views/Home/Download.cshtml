@model IEnumerable<myApp.Models.User>
@{
    ViewBag.Title = "Download";

}

<link rel="stylesheet" href="/CSS/Style.css">
<div class="sticky-header-breadcrumb">
    <div class="header-breadcrumb" style="background-color: #2D4686;">
        <nav aria-label="breadcrumb" style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);">
            <ol class="breadcrumb breadcrumb-chevron p-3 bg-body-tertiary">
                <li class="breadcrumb-item">
                    <a class="link-body-emphasis text-decoration-none" style="color: #C8E8FF" href="@Url.Action("Download", "Home", new { year = ViewBag.Year })">
                        <i class="fa-solid fa-download" style="color: #C8E8FF"></i> <strong style="color: #C8E8FF"> ดาวน์โหลด</strong>
                        <span class="visually-hidden">Home</span>
                    </a>
                </li>
            </ol>
        </nav>
    </div>

    <div class="text-center sticky-header">
        <div class="background-container">
            <i class="fa-solid fa-download topic-icon"></i>
        </div>
    </div>
</div>
<main>
    <h1 class="text-center topic-title" style="margin-top: 80px;">ดาวน์โหลด</h1>
    <div class="container d-flex mb-5 p-2 card-container">
        <div class="col-auto d-flex align-items-center ">
            <label for="selectCompany" class="form-label me-2 mt-2"> บริษัท:</label>
            <select class="form-select" id="selectCompany" style="width: 100px">
                <option value="">ทั้งหมด</option>
                @foreach (var dpt in Model.Where(cdt => cdt.Company != null).Select(cdt => cdt.Company).Distinct())
                {
                    <option value="@dpt">@dpt</option>
                }
            </select>
        </div>
        @*<div class="col-auto d-flex align-items-center ms-2">
            <label for="selectIDPGroup" class="form-label me-2 mt-2">IDP Group:</label>
            <select class="form-select" id="selectIDPGroup" style="width: 100px">
                <option value="">ทั้งหมด</option>
                @foreach (var dpt in Model.Where(cdt => cdt.Result.IDPGroupID != null).Select(cdt => cdt.Result.IDPGroupID).Distinct())
                {
                    <option value="@dpt">@dpt</option>
                }
            </select>
        </div>*@
        <div class="col-auto d-flex align-items-center ms-2">
            <label for="selectYear" class="form-label me-2 mt-2">ปี:</label>
            <select class="form-select" id="selectYear" style="width: 100px">
                <option value="">ทั้งหมด</option>
                @foreach (var dpt in Model.Where(cdt => cdt.Result.Year != null).Select(cdt => cdt.Result.Year).Distinct())
                {
                    <option value="@dpt">@dpt</option>
                }
            </select>
        </div>
        <div class="col-auto d-flex align-items-center ms-2">
            <label for="selectCostCenter" class="form-label me-2 mt-2">Cost Center:</label>
            <select class="form-select" id="selectCostCenter" style="width: 100px">
                <option value="">ทั้งหมด</option>
                @foreach (var costCenter in Model.Where(cdt => cdt.CostCenter != null).Select(cdt => cdt.CostCenter).Distinct())
                {
                    <option value="@costCenter">@costCenter</option>
                }
            </select>
        </div>
        <div class="col-auto ms-auto text-end">
            <button type="button" class="btn btn-lg active-link-excel" onclick="exportFilteredTableToExcel('myTB')">
                <i class="fa fa-solid fa-file-excel gradient-icon-excel fs-3"></i> <strong class="gradient-icon-excel">Excel</strong>
            </button>
        </div>
    </div>
    <div class="table-container m-4">
        <table class="table table-hover table-responsive table-striped" id="myTB" width="100%">
            <thead style="background-color: #2D4686; color: #C8E8FF">
                <tr>
                    <th>รหัส</th>
                    <th>ชื่อ</th>
                    <th>ตำแหน่ง</th>
                    <th>ข้อ</th>
                    <th>Critical</th>
                    <th>Competency Id</th>
                    <th>Requirement</th>
                    <th>Actual1</th>
                    <th>Gap1</th>
                    <th>Priority</th>
                    <th>Type</th>
                    <th>Development Plan</th>
                    <th>Q1</th>
                    <th>Q2</th>
                    <th>Q3</th>
                    <th>Q4</th>
                    <th>Development Result</th>
                    <th>Actual2</th>
                    <th>Gap2</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var groupedIDPGroup in Model.GroupBy(u => u.ResultItem.IDPGroupId))
                {
                    foreach (var nestedGroupedUser in groupedIDPGroup.GroupBy(u => u.Id))
                    {
                        var user = nestedGroupedUser.First();

                        foreach (var resultItem in nestedGroupedUser.Select(u => u.ResultItem))
                        {
                            <tr data-company="@user.Company" data-year="@user.Result.Year" data-costcenter="@user.CostCenter" data-idpgroup="@user.ResultItem.IDPGroupId" id="list">
                                @if (resultItem == user.ResultItem)
                                {
                                    <td>@resultItem.IDPGroupId</td>
                                    <td>@user.FirstNameTH @user.LastNameTH</td>
                                    <td>@user.JobLevel</td>
                                    <td>@resultItem.ResultItemId</td>
                                    <td class="text-center">
                                        @if (resultItem.Critical == false)
                                        {

                                            <text></text>
                                        }
                                        else
                                        {

                                            <img src="~/Images/hexagon_icon.png" width="25" height="25" />
                                        }
                                    </td>
                                    <td>@resultItem.CompetencyId</td>
                                    <td>@resultItem.Requirement</td>
                                    <td>@resultItem.Actual1</td>
                                    <td>@resultItem.Gap1</td>
                                    <td>@resultItem.Priority</td>
                                    <td>@resultItem.TypePlan</td>
                                    <td>@resultItem.DevPlan</td>
                                    <td>@resultItem.Q1</td>
                                    <td>@resultItem.Q2</td>
                                    <td>@resultItem.Q3</td>
                                    <td>@resultItem.Q4</td>
                                    <td>@resultItem.DevRst</td>
                                    <td>@resultItem.Actual2</td>
                                    <td>@resultItem.Gap2</td>

                                }
                                else
                                {
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td>@resultItem.ResultItemId</td>
                                    <td class="text-center">
                                        @if (resultItem.Critical == false)
                                        {

                                            <text></text>
                                        }
                                        else
                                        {

                                            <img src="~/Images/hexagon_icon.png" width="25" height="25" />
                                        }
                                    </td>
                                    <td>@resultItem.CompetencyId</td>
                                    <td>@resultItem.Requirement</td>
                                    <td>@resultItem.Actual1</td>
                                    <td>@resultItem.Gap1</td>
                                    <td>@resultItem.Priority</td>
                                    <td>@resultItem.TypePlan</td>
                                    <td>@resultItem.DevPlan</td>
                                    <td>@resultItem.Q1</td>
                                    <td>@resultItem.Q2</td>
                                    <td>@resultItem.Q3</td>
                                    <td>@resultItem.Q4</td>
                                    <td>@resultItem.DevRst</td>
                                    <td>@resultItem.Actual2</td>
                                    <td>@resultItem.Gap2</td>
                                }
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</main>
<!--<script type="text/javascript">
    var js = jQuery.noConflict(true);
    js(document).ready(function () {
        js('#myTB').DataTable({
            info: false,
            paging: false,
            ordering: false,
            searching: false,
            language: {
                search: '',
                searchPlaceholder: 'ค้นหา',
                lengthMenu: '_MENU_',
                paginate: {
                    next: 'ถัดไป <i class="fa fa-angle-double-right"></i>',
                    previous: '<i class="fa fa-angle-double-left"></i> ก่อนหน้า'
                },
                info: 'กำลังแสดง _START_ ถึง _END_ จาก _TOTAL_'
            },
            initComplete: function () {
                js('#myTable_length label').addClass('entries-label');
            }
        });
    });
</script>-->
<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="~/JS/unpkg_exceljs.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#selectYear, #selectIDPGroup, #selectCompany, #selectCostCenter").change(function () {
            filterTable();
        });

        function filterTable() {
            var selectedCompany = $("#selectCompany").val();
            var selectYear = $("#selectYear").val();
            //var selectIDPGroup = $("#selectIDPGroup").val();
            var selectCostCenter = $("#selectCostCenter").val();

            console.log(selectedCompany);
            console.log(selectYear);

            $("tbody tr").hide();

            $("tbody tr").each(function () {
                var company = $(this).data("company");
                //var idpGroup = $(this).data("idpgroup");
                var costCenter = $(this).data("costcenter");
                var year = $(this).data("year").toString();

                if ((selectYear === "" || year === selectYear) &&
                    (selectedCompany === "" || company === selectedCompany) &&
                    //(selectIDPGroup === "" || idpGroup === selectIDPGroup) &&
                    (selectCostCenter === "" || costCenter === selectCostCenter)) { 
                    $(this).show();
                }
            });
        }
    });

    function exportFilteredTableToExcel(tableId) {
        var table = document.getElementById(tableId);
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Sheet 1');

        for (var i = 0; i < table.rows.length; i++) {
            var row = table.rows[i];
            var rowData = [];

            if ($(row).is(':visible')) {
                for (var j = 0; j < row.cells.length; j++) {
                    var cell = row.cells[j];
                    var cellData = cell.innerText;

                    if (cell.classList.contains("text-center") && cell.querySelector("img") !== null) {
                        cellData = "1";
                    }

                    rowData.push(cellData);
                }
                worksheet.addRow(rowData);
            }
        }

        workbook.xlsx.writeBuffer().then(function (buffer) {
            var blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

            var link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'filtered_table_data.xlsx';
            link.click();
        });
    }
</script>

<style>
    main {
        margin-top: -50px;
    }

    .background-container {
        background-color: white; /* Set the white background */
        display: inline-block; /* Display the container as an inline block to wrap the icon */
        border-radius: 50%; /* Apply a circular shape to the container */
        padding: 1rem; /* Add padding around the icon */
        overflow: hidden; /* Hide any overflow from the circular container */
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px; /* Add a box shadow */
        margin-top: -50px;
    }

    .topic-icon {
        background: linear-gradient( 0deg, hsl(168deg 84% 12%) 0%, hsl(168deg 86% 13%) 11%, hsl(168deg 89% 14%) 22%, hsl(168deg 91% 15%) 33%, hsl(167deg 93% 16%) 44%, hsl(167deg 94% 18%) 56%, hsl(167deg 96% 19%) 67%, hsl(167deg 98% 20%) 78%, hsl(167deg 99% 21%) 89%, hsl(167deg 100% 22%) 100% );
        -webkit-background-clip: text; /* Clip the background to the text */
        -webkit-text-fill-color: transparent; /* Make the text transparent to show the background gradient */
        font-size: 45px;
        /* Any other styles for the icon, if needed */
    }

    .sticky-header-breadcrumb {
        position: sticky;
        border-radius: 0px;
        z-index: 10;
        top: 85px;
    }

    .sticky-header {
        position: sticky;
        z-index: 20;
    }

    .table-container {
        overflow: hidden;
        border-radius: 10px;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }
    .gradient-icon-excel {
        background-image: linear-gradient( 0deg, hsl(168deg 84% 12%) 0%, hsl(168deg 86% 13%) 11%, hsl(168deg 89% 14%) 22%, hsl(168deg 91% 15%) 33%, hsl(167deg 93% 16%) 44%, hsl(167deg 94% 18%) 56%, hsl(167deg 96% 19%) 67%, hsl(167deg 98% 20%) 78%, hsl(167deg 99% 21%) 89%, hsl(167deg 100% 22%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    .active-link-excel {
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }
        .active-link-excel:hover {
            border: 2px solid #006f57;
            transform: scale(.95);
        }
    .card-container {
        border-radius: 10px;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }
    .topic-title {
        background-image: linear-gradient( 0deg, hsl(168deg 84% 12%) 0%, hsl(168deg 86% 13%) 11%, hsl(168deg 89% 14%) 22%, hsl(168deg 91% 15%) 33%, hsl(167deg 93% 16%) 44%, hsl(167deg 94% 18%) 56%, hsl(167deg 96% 19%) 67%, hsl(167deg 98% 20%) 78%, hsl(167deg 99% 21%) 89%, hsl(167deg 100% 22%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: bold;
    }
</style>