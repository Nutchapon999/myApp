@model IEnumerable<myApp.Models.Result>
@{
    ViewBag.Title = "Info";
    var ResJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
    var RemarkJson = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Remark);
}
<link rel="stylesheet" href="/CSS/Style.css">
<div class="sticky-header-breadcrumb">
    <div class="row me-2 align-items-center">
        <div class="col-auto me-auto">
            <nav aria-label="breadcrumb" style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34; );">
                <ol class="breadcrumb breadcrumb-chevron bg-body-tertiary ms-3 mt-3">
                    <li class="breadcrumb-item">
                        <a class="link-body-emphasis text-decoration-none" href="@Url.Action("Index", "Form")">
                            <i class="fa-solid fa-home" style="color: #C8E8FF"></i> <strong style="color: #C8E8FF">หน้าแรก</strong>
                            <span class="visually-hidden">Home</span>
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a class="link-body-emphasis text-decoration-none" href="@Url.Action("Info", "Form", new { idpGroupId = ViewBag.IDPGroupId, guid = ViewBag.Guid })">
                            <strong style="color: #C8E8FF">รายละเอียดผลลัพธ์</strong>
                        </a>
                    </li>
                </ol>
            </nav>
        </div>
        <div class="col-auto overflow-x">
            <button type="button" class="btn btn-lg active-link-pdf" onclick="printPage()">
                <i class="fa fa-solid fa-file-pdf gradient-icon-pdf fs-3"></i> <strong class="gradient-icon-pdf">PDF</strong>
            </button>
        </div>
    </div>
</div>
<main>
    <div class="text-center m-4 sticky-header-topic">
        <h5 class="mt-2"><i class="fa-solid fa-address-card fs-2"></i> <strong>รายละเอียด</strong></h5>
        <div class="row justify-content-center">
            <div class="col-4 text-end">
                <h6><i class="fa fa-key fs-4"></i> รหัส<strong>: @ViewBag.Id</strong></h6>
            </div>
            <div class="col-auto text-center">
                <h6><i class="fa fa-user user-icon fs-4"></i> ชื่อ<strong>: @ViewBag.Prefix @ViewBag.FirstName @ViewBag.LastName</strong></h6>
            </div>
            <div class="col-4 text-start">
                <h6><i class="fa fa-solid fa-ranking-star fs-4"></i> ตำแหน่งขั้น<strong>: @ViewBag.JobLevel</strong></h6>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-4 text-end">
                <h6><i class="fa fa-solid fa-location-dot fs-4"></i> ตำแหน่ง<strong>: @ViewBag.Position</strong></h6>
            </div>
            <div class="col-auto text-center">
                <h6><i class="fa fa-home-user fs-4"></i> แผนก<strong>: @ViewBag.DepartmentName</strong></h6>
            </div>
            <div class="col-4 text-start">
                <h6><i class="fa fa-solid fa-building  fs-4"></i> บริษัท<strong>: @ViewBag.Company</strong></h6>
            </div>
        </div>
    </div>
    <div class="container justify-content-center mt-4">
        <div class="row align-items-center">
            
            <table class="table table-striped" id="myTable" width="80px">
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686; ">Competency All</th>
                    <td>@ViewBag.All</td>
                </tr>
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686;">Competency Pass</th>
                    <td>@ViewBag.Pass</td>
                </tr>
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686; ">% Competency</th>
                    <td>@ViewBag.Per%</td>
                </tr>
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686; ">>100%</th>
                    <td>
                    </td>
                </tr>
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686; ">>70%&#60;100%</th>
                    <td>
                        @ViewBag.Rank
                    </td>
                </tr>
                <tr class="text-center">
                    <th style="background-color: #C8E8FF; color: #2D4686; ">&#60;70%</th>
                    <td>
                    </td>
                </tr>
            </table>
            
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        foreach (var competencyType in new string[] { "MC", "FC", "TC_CC" })
        {
            var competencyTitle = "";
            switch (competencyType)
            {
                case "FC":
                    competencyTitle = "Functional";
                    break;
                case "MC":
                    competencyTitle = "Managerial";
                    break;
                case "TC_CC":
                    competencyTitle = "Technical";
                    break;
            }
            <div class="card-container m-2">
                <div class="row">
                    <div class="col-auto mt-2 me-auto">
                        <h3 class="ms-2 mt-2" id="@(competencyTitle + "Title")">Overall Competency - <strong>@competencyTitle</strong></h3>
                    </div>
                    <div class="col-auto">
                        
                    </div>
                </div>
                <div class="table-container m-2">
                    <table class="table table-hover table-striped" width="100%" id="@(competencyTitle + "TB")">
                        <thead style="background-color: #2D4686; color: #C8E8FF">
                            <tr>
                                <th class="text-center" rowspan="2" data-sortable="false" width="1%">Critical</th>
                                <th class="text-center" rowspan="2" width="9%">Competency</th>
                                <th class="text-center" rowspan="2" width="1%">R</th>
                                <th class="text-center" rowspan="2" width="1%">A1</th>
                                <th class="text-center" colspan="2" width="2%">GAP</th>
                                <th class="text-center" rowspan="2" width="1%">Priority</th>
                                <th class="text-center" rowspan="2" width="3%">Type</th>
                                <th class="text-center" rowspan="2" width="8%">Development Plan</th>
                                <th class="text-center" colspan="4" width="1%">Quarter</th>
                                <th class="text-center" rowspan="2" width="8%">Development Result</th>
                                <th class="text-center" rowspan="2" width="1%">A2</th>
                                <th class="text-center" colspan="2" width="2%">GAP</th>
                            </tr>
                            <tr>
                                <th class="text-center" width="1%">-</th>
                                <th class="text-center" width="1%">+</th>
                                <th class="text-center" width="1%">Q1</th>
                                <th class="text-center" width="1%">Q2</th>
                                <th class="text-center" width="1%">Q3</th>
                                <th class="text-center" width="1%">Q4</th>
                                <th class="text-center" width="1%">-</th>
                                <th class="text-center" width="1%">+</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var res in Model.Where(r => competencyType == "TC_CC" ? r.Competency.Type == "TC" || r.Competency.Type == "CC" : r.Competency.Type == competencyType))
                            {
                                var gap1 = res.ResultItem.Actual1 - int.Parse(res.IDPGroupItem.Pl);
                                var gap2 = res.ResultItem.Actual2 - int.Parse(res.IDPGroupItem.Pl);
                                <tr>
                                    <td class="text-center">
                                        @if (res.IDPGroupItem.Critical == false)
                                        {
                                            <text></text>
                                        }
                                        else
                                        {
                                            <img src="~/Images/hexagon_icon.png" width="25" height="25" />
                                        }
                                    </td>
                                    <td>@res.Competency.CompetencyNameTH</td>
                                    <td class="text-center">@res.IDPGroupItem.Pl</td>
                                    <td class="text-center">@res.ResultItem.Actual1</td>
                                    @if (gap1 < 0)
                                    {
                                        <td class="text-center">@gap1</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    @if (gap1 >= 0)
                                    {
                                        <td class="text-center">@gap1</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    <td class="text-center">@res.ResultItem.Priority</td>
                                    <td class="text-center">@res.ResultItem.TypePlan</td>
                                    <td>@res.ResultItem.DevPlan</td>
                                    @if (res.ResultItem.Q1 == "1")
                                    {
                                        <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    @if (res.ResultItem.Q2 == "1")
                                    {
                                        <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    @if (res.ResultItem.Q3 == "1")
                                    {
                                        <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    @if (res.ResultItem.Q4 == "1")
                                    {
                                        <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    <td>@res.ResultItem.DevRst</td>
                                    <td class="text-center">@res.ResultItem.Actual2</td>
                                    @if (gap2 < 0)
                                    {
                                        <td class="text-center">@gap2</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    @if (gap2 >= 0)
                                    {
                                        <td class="text-center">@gap2</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</main>
<div class="card-container m-2">
    <div class="row">
        <div class="col-4">
            <canvas id="pieChart-MC" height="400" width="400"></canvas>
        </div>
        <div class="col-4">
            <canvas id="pieChart-FC" height="400" width="400"></canvas>
        </div>
        <div class="col-4">
            <canvas id="pieChart-TC_CC" height="400" width="400"></canvas>
        </div>
    </div>
</div>
<script src="~/JS/cdn.jsdelivr.net_npm_chart.js"></script>
<script>

    var MC_Data = {
        labels: [@foreach (var res in Model)
            {
                if (res.Competency.Type == "MC")
                {
                    <text>'@TruncateString(res.Competency.CompetencyNameTH, 25)'</text>@(res != Model.Last() ? "," : "")
                }
            }],

        datasets: [
            {
                label: 'Actual1',
                data: [
                    @foreach (var res in Model)
                    {
                        if (res.Competency.Type == "MC")
                        {
                            <text>@(res.ResultItem.Actual1)</text>
                            if (!ReferenceEquals(res, Model.Last()))
                            {
                                <text>,</text>
                            }
                        }
                    }
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                ],
                borderWidth: 2,
            },
            {
                label: 'Actual2',
                data: [
                    @foreach (var res in Model)
                    {
                        if (res.Competency.Type == "MC")
                        {
                            <text>@(res.ResultItem.Actual2)</text>
                            if (!ReferenceEquals(res, Model.Last()))
                            {
                                <text>,</text>
                            }
                        }
                    }
                ],
                backgroundColor: [
                    'rgba(54, 162, 235, 0.5)',
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 2,
            }
        ]
    };

    var MC_Options = {
        plugins: {
            title: {
                display: true,
                text: 'Managerial Competency Achievement',
            },
            labels: {
                render: 'outside',
                arc: true,
                fontColor: 'black',
                fontSize: '14',
                fontStyle: 'bold',
                position: 'outside',
            },
        },
        scales: {
            r: {
                beginAtZero: true,
                max: 5,
                stepSize: 1,
                ticks: {
                    precision: 0,
                },
            },
        },
        responsive: true,
        maintainAspectRatio: false,
    };

    var MC_Chart = new Chart(document.getElementById('pieChart-MC'), {
        type: 'radar',
        data: MC_Data,
        options: MC_Options
    });

    var FC_Data = {
    labels: [@foreach (var res in Model)
        {
            if (res.Competency.Type == "FC")
            {
                <text>'@TruncateString(res.Competency.CompetencyNameTH,25)'</text>@(res != Model.Last() ? "," : "")
            }
        }],

    datasets: [
        {
            label: 'Actual1',
            data: [
                @foreach (var res in Model)
                {
                    if (res.Competency.Type == "FC")
                    {
                        <text>@(res.ResultItem.Actual1)</text>
                        if (!ReferenceEquals(res, Model.Last()))
                        {
                            <text>,</text>
                        }
                    }
                }
            ],
            backgroundColor: [
                'rgba(255, 99, 132, 0.5)',
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
            ],
            borderWidth: 2,
        },
        {
            label: 'Actual2',
            data: [
                @foreach (var res in Model)
                {
                    if (res.Competency.Type == "FC")
                    {
                        <text>@(res.ResultItem.Actual2)</text>
                        if (!ReferenceEquals(res, Model.Last()))
                        {
                            <text>,</text>
                        }
                    }
                }
            ],
            backgroundColor: [
                'rgba(54, 162, 235, 0.5)',
            ],
            borderColor: [
                'rgba(54, 162, 235, 1)',
            ],
            borderWidth: 2,
        }
    ]
    };

    var FC_Options = {
    plugins: {
        title: {
            display: true,
            text: 'Functional Competency Achievement',
        },
        labels: {
            render: 'outside',
            arc: true,
            fontColor: 'black',
            fontStyle: 'bold',
            position: 'outside',
        },
    },
    scales: {
        r: {
            beginAtZero: true,
            max: 5,
            stepSize: 1,
            ticks: {
                precision: 0,
            },
        },
    },
    responsive: true,
    maintainAspectRatio: false,
    };

    var FC_Chart = new Chart(document.getElementById('pieChart-FC'), {
        type: 'radar',
        data: FC_Data,
        options: FC_Options
    });

    var TC_CC_Data = {
        labels: [@foreach (var res in Model)
            {
                if (res.Competency.Type == "TC" || res.Competency.Type == "CC")
                {
                    <text>'@TruncateString(res.Competency.CompetencyNameTH, 25)'</text>@(res != Model.Last() ? "," : "")
                }
            }],

        datasets: [
            {
                label: 'Actual1',
                data: [
                    @foreach (var res in Model)
                    {
                        if (res.Competency.Type == "TC" || res.Competency.Type == "CC")
                        {
                            <text>@(res.ResultItem.Actual1)</text>
                            if (!ReferenceEquals(res, Model.Last()))
                            {
                                <text>,</text>
                            }
                        }
                    }
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                ],
                borderWidth: 2,
            },
            {
                label: 'Actual2',
                data: [
                    @foreach (var res in Model)
                    {
                        if (res.Competency.Type == "TC" || res.Competency.Type == "CC")
                        {
                            <text>@(res.ResultItem.Actual2)</text>
                            if (!ReferenceEquals(res, Model.Last()))
                            {
                                <text>,</text>
                            }
                        }
                    }
                ],
                backgroundColor: [
                    'rgba(54, 162, 235, 0.5)',
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 2,
            }
        ]
    };

    var TC_CC_Options = {
        plugins: {
            title: {
                display: true,
                text: 'Technical Competency Achievement',
            },
            labels: {
                render: 'outside',
                arc: true,
                fontColor: 'black',
                fontStyle: 'bold',
                position: 'outside',
            },
        },
        scales: {
            r: {
                beginAtZero: true,
                max: 5,
                stepSize: 1,
                ticks: {
                    precision: 0,
                },
            },
        },
        responsive: true,
        maintainAspectRatio: false,
    };

    var TC_CC_Chart = new Chart(document.getElementById('pieChart-TC_CC'), {
        type: 'radar',
        data: TC_CC_Data,
        options: TC_CC_Options
    });

    @functions {
        public string TruncateString(string text, int maxLength)
        {
            if (text.Length <= maxLength)
                return text;
            else
                return text.Substring(0, maxLength) + "...";
        }
    }

    @*document.addEventListener("DOMContentLoaded", function () {
        var canvas = document.getElementById("chart");

        var competencyAll;
        var competencyPass;

        competencyAll = @emp.CompetencyAll;
        competencyPass = @emp.CompetencyPass;


        var competencyFail = @emp.CompetencyAll - @emp.CompetencyPass;
        var maxScale = competencyAll > 0 ? competencyAll : 1;

        var chart = new Chart(canvas, {
            type: 'bar',
            data: {
                labels: ['ไม่มี GAP', 'มี GAP  '],
                datasets: [{
                    label: 'Competency Result',
                    data: [competencyPass, competencyFail],
                    backgroundColor: ['#4bc0c050', '#ff638450'],
                    borderColor: ['#4bc0c0', '#ff6384'],
                    borderWidth: 1,
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        max: maxScale,
                        ticks: {
                            precision: 0,
                        },
                    }
                },
            }
        });
    });*@

    var res = @Html.Raw(ResJson);
    var remark = @Html.Raw(RemarkJson);

    console.log(remark);
    console.log(res);

    function printPage() {

        var pieChartMC = document.getElementById('pieChart-MC');
        var pieChartMCDataURL = pieChartMC.toDataURL('image/png')

        var pieChartFC = document.getElementById('pieChart-FC');
        var pieChartFCDataURL = pieChartFC.toDataURL('image/png')

        var pieChartTC_CC = document.getElementById('pieChart-TC_CC');
        var pieChartTC_CCDataURL = pieChartTC_CC.toDataURL('image/png')

        var propertyCount = Object.keys(res).length;
        console.log(propertyCount);
        console.log(res[0].ResultItem.Q2);

        var year = parseInt(@ViewBag.Year) - 543;
        console.log(year);


        var originalContents = document.body.innerHTML;

        var printWindow = window.open('', '_blank');
        var printDocument = printWindow.document;

        printDocument.write('<!DOCTYPE html>');
        printDocument.write('<html>');
        printDocument.write('<head>');
        printDocument.write('<meta charset="utf-8">');
        printDocument.write('<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">');
        printDocument.write('<title>Print</title>');
        printDocument.write('<meta name="filename" content="Print">');
        printDocument.write('<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">');
        printDocument.write('<link rel="preconnect" href="https://fonts.googleapis.com">');
        printDocument.write('<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>');
        printDocument.write('<link href="https://fonts.googleapis.com/css2?family=Sarabun:wght@500&display=swap" rel="stylesheet">');
        printDocument.write('<style>');
        printDocument.write('body { font-family: Arial, sans-serif; }');
        printDocument.write('#TB,#TB td,#TB th { border: 1px solid; }');
        printDocument.write('#reTB,#reTB th { border: 1px solid; }');
        printDocument.write('#TB { width: 100 %; border - collapse: collapse; }');
        printDocument.write('#TB tbody tr:nth-child(even) { background-color: #f2f2f2; border: 1px solid;}');
        printDocument.write('</style>');
        printDocument.write('</head>');
        printDocument.write('<body>');
        printDocument.write('<div class="row m-2 align-items-center" style="background-color: #D5F8EF; border: 2px solid black;">');
        printDocument.write('<img src="https://www.satpcl.co.th/themes/default/assets/static/images/logo.png" style="max-width: 10%" />');
        printDocument.write('<div class="col-auto mt-2">');
        printDocument.write('<p class="fw-bold" style="font-size: 14px;">Competency Evaluation &</p>');
        printDocument.write('<p class="fw-bold" style="font-size: 14px;">Individual Development Plan ' + year + '</p>');
        printDocument.write('</div>');
        printDocument.write('<div class="col-auto mt-2">');
        printDocument.write('<p style="font-size: 12px;"><strong>ID:</strong> @ViewBag.Id</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>Name:</strong> @ViewBag.Prefix @ViewBag.FirstName @ViewBag.LastName</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>Position:</strong> @ViewBag.Position</p>');
        printDocument.write('</div>');
        printDocument.write('<div class="col-auto mt-2">');
        printDocument.write('<p style="font-size: 12px;"><strong>Department:</strong> @ViewBag.DepartmentName</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>JobLevel:</strong> @ViewBag.JobLevel</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>BU/Holding:</strong> @ViewBag.Company</p>');
        printDocument.write('</div>');
        printDocument.write('<div class="col-auto mt-2">');
        printDocument.write('<p style="font-size: 12px;"><strong>IDPGroupID:</strong> @ViewBag.IDPGroupID</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>IDPGroupName:</strong> @ViewBag.IDPGroupName</p>');
        printDocument.write('<p style="font-size: 12px;"><strong>Year:</strong> @ViewBag.Year</p>');
        printDocument.write('</div>');
        printDocument.write('</div>');
        printDocument.write('<div class="row ms-2 me-2">');
        printDocument.write('<img src="' + pieChartMCDataURL + '" style="max-width:25%; border: 2px solid black;">');
        printDocument.write('<img src="' + pieChartFCDataURL + '" style="max-width:25%; border: 2px solid black;">');
        printDocument.write('<img src="' + pieChartTC_CCDataURL + '" style="max-width:25%; border: 2px solid black;">');
        printDocument.write('<div class="col-3" style="padding-left: 0; padding-right: 0;">');
        printDocument.write('<table class="table table-striped" id="myTable" width="80">');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">Competency All</th>');
        printDocument.write('<td>' + @ViewBag.All +'</td>');
        printDocument.write('</tr>');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">Competency Pass</th>');
        printDocument.write('<td>' + @ViewBag.Pass +'</td>');
        printDocument.write('</tr>');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">% Competency</th>');
        printDocument.write('<td>' + @ViewBag.Per +'%</td>');
        printDocument.write('</tr>');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">>100%</th>');
        printDocument.write('<td>');
        printDocument.write('</td>');
        printDocument.write('</tr>');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">>70%&#60;100%</th>');
        printDocument.write('<td>' + '@ViewBag.Rank' +'</td>');
        printDocument.write('</tr>');
        printDocument.write('<tr class="text-center">');
        printDocument.write('<th style="background-color: #B7DCFF; font-size: 12px;">&#60;70%</th>');
        printDocument.write('<td>');
        printDocument.write('</td>');
        printDocument.write('</tr>');
        printDocument.write('</table>');
        printDocument.write('</div>');
        printDocument.write('</div>');
        printDocument.write('<table class="mt-3" width="100%" id="TB">');
        printDocument.write('<thead style="background-color: #fbd0da"');
        printDocument.write('<tr>');
        printDocument.write('<th colspan="17" style="padding: 0px 0px 0px 5px;">II-1. Overall Competency - Managerial</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Critical</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Competency Name</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="2%">R</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="1%">A1</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="2%">Gap1</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Priority</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Type</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Plan</th>');
        printDocument.write('<th class="text-center" colspan="4" style="font-size: 15px;" width="5%">Quarter</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Result</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">A2</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="5%">Gap2</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('<th class="text-center" width="1%">Q1</th>');
        printDocument.write('<th class="text-center" width="1%">Q2</th>');
        printDocument.write('<th class="text-center" width="1%">Q3</th>');
        printDocument.write('<th class="text-center" width="1%">Q4</th>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('</tr>');
        printDocument.write('</thead>');
        printDocument.write('<tbody>');
        for (i = 0; i < propertyCount; i++) {
            if (res[i].Competency.Type === "MC") {
                printDocument.write('<tr>');
                if (res[i].IDPGroupItem.Critical == false) {
                    printDocument.write('<td></td>');
                } else {
                    printDocument.write('<td class="text-center"><img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Regular_hexagon.svg" width="25" height="25" /></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].Competency.CompetencyNameTH || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Requirement || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual1 || '') + '</td>');
                if (res[i].ResultItem.Gap1 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap1 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Priority || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.TypePlan || '') + '</td>');
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevPlan || '') + '</td>');
                if (res[i].ResultItem.Q1 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q2 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q3 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q4 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevRst || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual2 || '') + '</td>');
                if (res[i].ResultItem.Gap2 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap2 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('</tr>');
            }
        }
        printDocument.write('</tbody>');
        printDocument.write('</table>');
        printDocument.write('<table class="mt-3" width="100%" id="TB">');
        printDocument.write('<thead style="background-color: #FDF3CE"');
        printDocument.write('<tr>');
        printDocument.write('<th colspan="17" style="padding: 0px 0px 0px 5px;">II-2. Overall Competency - Functional</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Critical</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Competency Name</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="2%">R</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="1%">A1</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="2%">Gap1</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Priority</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Type</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Plan</th>');
        printDocument.write('<th class="text-center" colspan="4" style="font-size: 15px;" width="5%">Quarter</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Result</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">A2</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="5%">Gap2</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('<th class="text-center" width="1%">Q1</th>');
        printDocument.write('<th class="text-center" width="1%">Q2</th>');
        printDocument.write('<th class="text-center" width="1%">Q3</th>');
        printDocument.write('<th class="text-center" width="1%">Q4</th>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('</tr>');
        printDocument.write('</thead>');
        printDocument.write('<tbody>');
        for (i = 0; i < propertyCount; i++) {
            if (res[i].Competency.Type === "FC") {
                printDocument.write('<tr>');
                if (res[i].IDPGroupItem.Critical == false) {
                    printDocument.write('<td></td>');
                } else {
                    printDocument.write('<td class="text-center"><img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Regular_hexagon.svg" width="25" height="25" /></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].Competency.CompetencyNameTH || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Requirement || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual1 || '') + '</td>');
                if (res[i].ResultItem.Gap1 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap1 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Priority || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.TypePlan || '') + '</td>');
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevPlan || '') + '</td>');
                if (res[i].ResultItem.Q1 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q2 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q3 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q4 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevRst || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual2 || '') + '</td>');
                if (res[i].ResultItem.Gap2 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap2 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('</tr>');
            }
        }
        printDocument.write('</tbody>');
        printDocument.write('</table>');

        printDocument.write('<table class="mt-3" width="100%" id="TB">');
        printDocument.write('<thead style="background-color: #FFE3CD"');
        printDocument.write('<tr>');
        printDocument.write('<th colspan="17" style="padding: 0px 0px 0px 5px;">II-3. Overall Competency - Technical</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Critical</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Competency Name</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="2%">R</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="1%">A1</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="2%">Gap1</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Priority</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">Type</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Plan</th>');
        printDocument.write('<th class="text-center" colspan="4" style="font-size: 15px;" width="5%">Quarter</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="20%">Development Result</th>');
        printDocument.write('<th class="text-center" rowspan="2" style="font-size: 15px;" width="5%">A2</th>');
        printDocument.write('<th class="text-center" colspan="2" style="font-size: 15px;" width="5%">Gap2</th>');
        printDocument.write('</tr>');
        printDocument.write('<tr>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('<th class="text-center" width="1%">Q1</th>');
        printDocument.write('<th class="text-center" width="1%">Q2</th>');
        printDocument.write('<th class="text-center" width="1%">Q3</th>');
        printDocument.write('<th class="text-center" width="1%">Q4</th>');
        printDocument.write('<th class="text-center" width="1%">-</th>');
        printDocument.write('<th class="text-center" width="1%">+</th>');
        printDocument.write('</tr>');
        printDocument.write('</thead>');
        printDocument.write('<tbody>');
        for (i = 0; i < propertyCount; i++) {
            if (res[i].Competency.Type === "TC" || res[i].Competency.Type === "CC")
            {
                printDocument.write('<tr>');
                if (res[i].IDPGroupItem.Critical == false) {
                    printDocument.write('<td></td>');
                } else {
                    printDocument.write('<td class="text-center"><img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Regular_hexagon.svg" width="25" height="25" /></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].Competency.CompetencyNameTH || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Requirement || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual1 || '') + '</td>');
                if (res[i].ResultItem.Gap1 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap1 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap1) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Priority || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.TypePlan || '') + '</td>');
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevPlan || '') + '</td>');
                if (res[i].ResultItem.Q1 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q2 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q3 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Q4 == "1") {
                    printDocument.write('<td class="text-center"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg></td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('<td style="font-size: 13px; padding: 5px 5px 5px 5px;">' + (res[i].ResultItem.DevRst || '') + '</td>');
                printDocument.write('<td class="text-center">' + (res[i].ResultItem.Actual2 || '') + '</td>');
                if (res[i].ResultItem.Gap2 < 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                if (res[i].ResultItem.Gap2 >= 0) {
                    printDocument.write('<td class="text-center">' + (res[i].ResultItem.Gap2) + '</td>');
                }
                else {
                    printDocument.write('<td></td>');
                }
                printDocument.write('</tr>');
            }
        }
        printDocument.write('</tbody>');
        printDocument.write('</table>');
        if (remark.length == 2) {
            printDocument.write('<div class="container">');
            printDocument.write('<div class="row justify-content-center text-center">');
            printDocument.write('<div class="col-auto">');
            printDocument.write('<table class="mt-3" id="reTB">');
            printDocument.write('<thead>');
            printDocument.write('<tr>');
            printDocument.write('<th>ผู้อนุมัติรอบที่ 1</th>');
            printDocument.write('</tr>');
            printDocument.write('</thead>');
            printDocument.write('<tbody>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[0].Name || '' + '  ' + remark[0].Position || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[0].Remark || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>วันที่: ' + remark[0].RemarkDate || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('</tbody>');
            printDocument.write('</table>');
            printDocument.write('</div>');
            printDocument.write('<div class="col-auto">');
            printDocument.write('<table class="mt-3" id="reTB">');
            printDocument.write('<thead>');
            printDocument.write('<tr>');
            printDocument.write('<th>ผู้อนุมัติรอบที่ 2</th>');
            printDocument.write('</tr>');
            printDocument.write('</thead>');
            printDocument.write('<tbody>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[1].Name || '' + '  ' + remark[1].Position || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[1].Remark || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>วันที่: ' + remark[1].RemarkDate || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('</tbody>');
            printDocument.write('</table>');
            printDocument.write('</div>');
            printDocument.write('</div>');
            printDocument.write('</div>');
        }
        else if (remark.length == 1) {
            printDocument.write('<div class="container">');
            printDocument.write('<div class="row justify-content-center text-center">');
            printDocument.write('<div class="col-auto">');
            printDocument.write('<table class="mt-3" id="reTB">');
            printDocument.write('<thead>');
            printDocument.write('<tr>');
            printDocument.write('<th>ผู้อนุมัติรอบที่ 1</th>');
            printDocument.write('</tr>');
            printDocument.write('</thead>');
            printDocument.write('<tbody>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[0].Name || '' + '  ' + remark[0].Position || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>' + remark[0].Remark || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('<tr>');
            printDocument.write('<td>วันที่: ' + remark[0].RemarkDate || '' + '</td>');
            printDocument.write('</tr>');
            printDocument.write('</tbody>');
            printDocument.write('</table>');
            printDocument.write('</div>');
            printDocument.write('</div>');
            printDocument.write('</div>');
        }

        printDocument.write('</body>');
        printDocument.write('</html>');
        printDocument.close();

        setTimeout(function () {
            printWindow.print();
            printWindow.close();
            location.reload();
            document.body.innerHTML = originalContents;
        }, 500);
    }
</script>
<style>
    #myTable {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .card-container,
    .table-container {
        overflow: hidden;
        border-radius: 10px;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .sticky-header-breadcrumb {
        position: sticky;
        z-index: 100;
        border-radius: 0px;
        top: 85px;
        background-color: #2D4686;
    }

    .sticky-header {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: white;
        cursor: pointer;
    }

    .pie {
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
        border-radius: 1rem;
    }

    .gradient-icon-pie {
        background-image: linear-gradient( 0deg, hsl(36deg 96% 62%) 0%, hsl(38deg 96% 61%) 11%, hsl(40deg 96% 61%) 22%, hsl(43deg 95% 61%) 33%, hsl(45deg 95% 60%) 44%, hsl(47deg 95% 60%) 56%, hsl(50deg 95% 60%) 67%, hsl(52deg 95% 59%) 78%, hsl(54deg 94% 59%) 89%, hsl(56deg 94% 59%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .active-link-pie {
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .fa-key,
    .fa-file-lines {
        background-image: linear-gradient( 0deg, hsl(36deg 96% 62%) 0%, hsl(38deg 96% 61%) 11%, hsl(40deg 96% 61%) 22%, hsl(43deg 95% 61%) 33%, hsl(45deg 95% 60%) 44%, hsl(47deg 95% 60%) 56%, hsl(50deg 95% 60%) 67%, hsl(52deg 95% 59%) 78%, hsl(54deg 94% 59%) 89%, hsl(56deg 94% 59%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .fa-address-card,
    .fa-location-dot {
        background-image: linear-gradient( 0deg, hsl(357deg 100% 30%) 0%, hsl(358deg 85% 34%) 11%, hsl(358deg 76% 37%) 22%, hsl(358deg 69% 40%) 33%, hsl(358deg 64% 42%) 44%, hsl(357deg 59% 45%) 56%, hsl(357deg 55% 47%) 67%, hsl(356deg 52% 49%) 78%, hsl(355deg 52% 52%) 89%, hsl(354deg 53% 54%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .user-icon {
        background-image: linear-gradient( 0deg, hsl(220deg 100% 47%) 0%, hsl(216deg 100% 47%) 6%, hsl(213deg 100% 48%) 14%, hsl(209deg 100% 48%) 22%, hsl(206deg 100% 48%) 32%, hsl(202deg 100% 49%) 43%, hsl(199deg 100% 49%) 56%, hsl(195deg 100% 49%) 70%, hsl(192deg 100% 50%) 85%, hsl(188deg 100% 50%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .fa-ranking-star {
        background-image: linear-gradient( 0deg, hsl(233deg 51% 36%) 0%, hsl(237deg 17% 44%) 11%, hsl(298deg 1% 48%) 22%, hsl(52deg 13% 52%) 33%, hsl(54deg 26% 54%) 44%, hsl(55deg 40% 56%) 56%, hsl(55deg 54% 58%) 67%, hsl(56deg 67% 59%) 78%, hsl(56deg 81% 59%) 89%, hsl(56deg 94% 59%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .fa-home-user,
    .fa-building {
        background-image: linear-gradient( 0deg, hsl(233deg 51% 36%) 0%, hsl(229deg 55% 38%) 11%, hsl(225deg 60% 39%) 22%, hsl(221deg 64% 41%) 33%, hsl(217deg 69% 42%) 44%, hsl(213deg 75% 44%) 56%, hsl(209deg 80% 45%) 67%, hsl(204deg 86% 46%) 78%, hsl(200deg 93% 46%) 89%, hsl(196deg 100% 47%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .fa-tag {
        background-image: linear-gradient( 0deg, hsl(335deg 85% 55%) 0%, hsl(335deg 86% 57%) 11%, hsl(335deg 87% 59%) 22%, hsl(334deg 89% 61%) 33%, hsl(334deg 90% 63%) 44%, hsl(334deg 91% 66%) 56%, hsl(334deg 93% 68%) 67%, hsl(333deg 95% 70%) 78%, hsl(333deg 97% 72%) 89%, hsl(333deg 100% 75%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .sticky-header-topic {
        top: 150px;
        background-color: #eeeeee;
        border: 5px dotted #B30021;
    }

    .active-link-pdf {
        background-color: white;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

        .active-link-pdf:hover {
            background-color: white;
            transform: scale(.95);
            border: 2px solid #9B0008;
        }

    .gradient-icon-pdf {
        background-image: linear-gradient( 0deg, hsl(357deg 100% 30%) 0%, hsl(358deg 85% 34%) 11%, hsl(358deg 76% 37%) 22%, hsl(358deg 69% 40%) 33%, hsl(358deg 64% 42%) 44%, hsl(357deg 59% 45%) 56%, hsl(357deg 55% 47%) 67%, hsl(356deg 52% 49%) 78%, hsl(355deg 52% 52%) 89%, hsl(354deg 53% 54%) 100% );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
</style>
